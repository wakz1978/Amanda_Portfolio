#respons should be between "0" and "1"
titanic_training<-as.data.frame(titanic_training, as.numeric)
str(titanic_training)
titanic_train <- titanic_training[,!names(titanic_training) %in% c('Pclass', 'Name', 'Sex', 'Ticket', 'Cabin', 'Embarked', 'Sex_Is_Male')]
str(titanic_training)
str(titanic_train)
model1 <-glm(Survived ~ ., data = titanic_train, family = binomial)
vif(model1)
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass', 'Embarked', 'Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
titanic_training
#respons should be between "0" and "1"
titanic_training<-as.data.frame(function(x) as.numeric(as.character(x)))
str(titanic_training)
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass', 'Embarked', 'Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
library('fastDummies')
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass', 'Embarked', 'Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#respons should be between "0" and "1"
titanic_training<-as.data.frame(function(x) as.numeric(as.character(x)))
#respons should be between "0" and "1"
titanic_training[] <-as.data.frame(function(x) as.numeric(as.character(x)))
str(titanic_training)
titanic_train <- titanic_training[,!names(titanic_training) %in% c('Pclass', 'Name', 'Sex', 'Ticket', 'Cabin', 'Embarked', 'Sex_Is_Male')]
titanic_train
model1 <- glm(Survived ~ ., data = titanic_train, family = binomial)
vif(model1)
str(titanic_train)
summary(model1)
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
str(titanic_train$Embarked)
str(titanic_training$Embarked)
table(titanic_training$Embarked)
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#respons should be between "0" and "1"
titanic_training[] <-as.data.frame(function(x) as.numeric(as.character(x)))
str(titanic_training)
titanic_train <- titanic_training[,!names(titanic_training) %in% c('Embarked','Cabin','Name',  'Ticket')]
vif(model1)
str(titanic_train)
titanic_train <- titanic_training[,!names(titanic_training) %in% c('PassengerId', Embarked','Cabin','Name',  'Ticket')]
titanic_train <- titanic_training[,!names(titanic_training) %in% c('PassengerId', 'Embarked','Cabin','Name',  'Ticket')]
vif(model1)
model1 <- glm(Survived ~ ., data = titanic_train, family = "binomial")
vif(model1)
summary(model1)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_train, family = "binomial")
vif(model2)
summary(model2)
colSums(is.na(titanic_train))
View(titanic_train)
clean_data <- na.omit(titanic_train)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = clean_data, family = "binomial")
vif(model2)
summary(model2)
titanic_train$Age[is.na(titanic_train$Age)] <- mean(titanic_train$Age, na.rm = TRUE)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_train, family = "binomial")
vif(model2)
summary(model2)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_train, family = "binomial")
vif(model2)
summary(model2)
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-as.data.frame(function(x) as.numeric(as.character(x)))
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
# titanic_training[] <-as.data.frame(function(x) as.numeric(as.character(x)))
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
titanic_train <- titanic_training[,!names(titanic_training) %in% c('PassengerId', 'Embarked','Cabin','Name',  'Ticket')]
str(titanic_train)
model1 <- glm(Survived ~ ., data = titanic_train, family = "binomial")
vif(model1)
summary(model1)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_train, family = "binomial")
vif(model2)
summary(model2)
colSums(is.na(titanic_train))
colSums(is.na(titanic_train))
colSums(is.na(titanic_training))
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
colSums(is.na(titanic_training))
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex', 'Embarked'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
#-------------------------------------------------------------------
# Import data
# SY has run a cold calling campaign a month ago.
# From this campaign you are provided a rich dataset that contains
# information about a random set of existing SY clients (sample size: 4140).
#-------------------------------------------------------------------
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
#-------------------------------------------------------------------
# Import data
# SY has run a cold calling campaign a month ago.
# From this campaign you are provided a rich dataset that contains
# information about a random set of existing SY clients (sample size: 4140).
#-------------------------------------------------------------------
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
colSums(is.null(titanic_training))
colSumes(is.nan(titanic_training))
colSums(is.nan(titanic_training))
prop.table(table(titanic_training$Embarked)) * 100
subset(titanic_training, is.na(Embarked))
titanic_training[is.na(titanic_training$Embarked), ]
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
unique(titanic_training$Embarked)
table(titanic_training$Embarked, useNA = "ifany")
sum(titanic_training$Embarked == "", na.rm = TRUE)
titanic_training$Embarked[titanic_training$Embarked == ""] <- NA
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex', 'Embarked'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
# Drop columns not needed in analysis as cannot be numeric
titanic_train <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name',  'Ticket')]
str(titanic_train)
model1 <- glm(Survived ~ ., data = titanic_train, family = "binomial")
vif(model1)
vif(model1)
summary(model1)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_train, family = "binomial")
vif(model2)
summary(model2)
nPseudoR2(model2, which = "Nagelkerke")
PseudoR2(model2, which = "Nagelkerke")
anova(model2, test="Chisq")
h3<-hoslem.test(titanic_train$Survived, fitted(model2), g=10)
h3
h3<-hoslem.test(titanic_train$Survived, fitted(model2), g=10)
h3<-hoslem.test(titanic_train$Survived, fitted(model2), g=10)
# Get model data
model_data <- model.frame(model2)
h3<-hoslem.test(model_data$Survived, fitted(model2), g = 10)
h3
#-----------------------------------------------------------------
# Standardization of Model Coefficients
# For comparison of affect of independent variables on dependent "Renew" to see which variable has the strongest effect.
#-----------------------------------------------------------------
model2.std <- beta(model2)
model2.std
# Write standardized coefficients to csv file for visualization
write.csv((coef(model2.std)[, "Estimate"]),"Standarised_Coefficients.csv")
#----------------------------------------------------------------
# Odds-Ratio Calculations
# To see how the log odds "Renew" affected by 1 unit increase in variables in model, minus the intercept
#----------------------------------------------------------------
exp(coef(model2))
exp(confint(model2)
write.csv((cbind(exp(coef(model2)), exp(confint(model2)))), "Odds_Ratio.csv")
exp(confint(model2))
write.csv((cbind(exp(coef(model2)), exp(confint(model2)))), "Odds_Ratio.csv")
titanic_test <- read.csv("test.csv", header = TRUE)
str(titanic_test)
str(titanic_test)
names(titanic_training)
names(titanic_test)
unique(titanic_test$Embarked)
table(titanic_test$Embarked, useNA = "ifany")
table(titanic_test, useNA = "ifany")
str(titanic_test)
#response should be between "0" and "1"
titanic_test <- dummy_cols(titanic_test, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_test[] <-lapply(titanic_test, as.numeric)
str(titanic_test)
# Drop columns not needed in analysis as cannot be numeric
titanic_train <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name',  'Ticket')]
str(titanic_test)
# Drop columns not needed in analysis as cannot be numeric
titanic_test <- titanic_test[,!names(titanic_test) %in% c('PassengerId','Cabin','Name',  'Ticket')]
str(titanic_test)
# Drop columns not needed in analysis as cannot be numeric
titanic_test <- titanic_test[,!names(titanic_test) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_test)
titanic_test$Predicted_Survival <- predict(model2, newdata = titanic_test, type = "response")
View(titanic_test)
Conf(model2, cutoff = 0.5)
titanic_train$IsAlive <- predict(model2, data = titanic_train, type = "response")
setwd("C:/Users/wakz1/OneDrive/Amanda Stuff/GitHub/Amanda_Portfolio/TitanicLogisticRegression")
str(titanic_training)
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
unique(titanic_training$Embarked)
table(titanic_training$Embarked, useNA = "ifany")
titanic_training$Embarked[titanic_training$Embarked == ""] <- NA
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex', 'Embarked'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name',  'Ticket')]
str(titanic_training)
model1 <- glm(Survived ~ ., data = titanic_training, family = "binomial")
vif(model1)
summary(model1)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_training, family = "binomial")
vif(model2)
summary(model2)
PseudoR2(model2, which = "Nagelkerke")
anova(model2, test="Chisq")
# Get model data
model_data <- model.frame(model2)
h3<-hoslem.test(model_data$Survived, fitted(model2), g = 10)
h3
model_data
model_data
model_data
#----------------------------------------------------------------
# Odds-Ratio Calculations
# To see how the log odds "Renew" affected by 1 unit increase in variables in model, minus the intercept
#----------------------------------------------------------------
exp(coef(model2))
exp(confint(model2))
write.csv((cbind(exp(coef(model2)), exp(confint(model2)))), "Odds_Ratio.csv")
titanic_train$IsAlive <- predict(model2, data = model_data, type = "response")
titanic_training$IsAlive <- predict(model2, data = model_data, type = "response")
titanic_training$IsAlive <- predict(model2, data = titanic_training, type = "response")
titanic_training_modeldata <- model.frame(model2)
titanic_training_modeldata$IsAlive <- predict(model2, type = "response")
Conf_matrix(model2, 0.5)
Conf(model2, cutoff = 0.5)
titanic_test <- read.csv("test.csv", header = TRUE)
str(titanic_test)
names(titanic_test)
#response should be between "0" and "1"
titanic_test <- dummy_cols(titanic_test, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_test[] <-lapply(titanic_test, as.numeric)
# Drop columns not needed in analysis as cannot be numeric
titanic_test <- titanic_test[,!names(titanic_test) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_test)
titanic_test$Predicted_Survival <- predict(model2, newdata = titanic_test, type = "response")
View(titanic_test)
titanic_training_modeldata$Predicted_survival <- predict(model2, type = "response")
titanic_training$IsAlive <- ifelse(titanic_training_modeldata$Predicted_survival > 0.5, 1, 0)
titanic_training_modeldata$IsAlive <- ifelse(titanic_training_modeldata$Predicted_survival > 0.5, 1, 0)
conf_matrix <- table(titanic_training$IsAlive, titanic_training$IsAlive)
conf_matrix <- table(titanic_training_modeldata$IsAlive, titanic_training_modeldata$IsAlive)
conf_matrix
titanic_training_modeldata$IsAlive <- ifelse(titanic_training_modeldata$Predicted_survival > 0.5, 1, 0)
conf_matrix <- table(titanic_training_modeldata$IsAlive, titanic_training_modeldata$IsAlive)
conf_matrix
View(titanic_training_modeldata)
titanic_training_modeldata$IsAlive <- ifelse(titanic_training_modeldata$Predicted_survival > 0.5, 1, 0)
conf_matrix <- table(titanic_training_modeldata$IsAlive, titanic_training_modeldata$IsAlive)
conf_matrix
conf_matrix <- table(titanic_training_modeldata$IsAlive, titanic_training_modeldata$Survived)
conf_matrix
accuracytraining <- message("Accuracy Training Data: ", sum(diag(conf_matrix))/sum(conf_matrix))
message("Sensitivity Training: ", conf_matrix[2, 2]/sum(conf_matrix[ , 2]))
message("Specificity Training: ", conf_matrix[1, 1]/sum(conf_matrix[ , 1]))
titanic_test <- read.csv("test.csv", header = TRUE)
str(titanic_test)
names(titanic_test)
#response should be between "0" and "1"
titanic_test <- dummy_cols(titanic_test, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_test[] <-lapply(titanic_test, as.numeric)
# Drop columns not needed in analysis as cannot be numeric
titanic_test <- titanic_test[,!names(titanic_test) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_test)
titanic_test$Predicted_Survival <- predict(model2, newdata = titanic_test, type = "response")
View(titanic_test)
titanic_test$IsAlive <- if (titanictest$Predicted_Survival >0.5, 1, 0)
titanic_test$IsAlive <- ifelse(titanictest$Predicted_Survival >0.5, 1, 0)
titanic_test$IsAlive <- ifelse(titanictest$Predicted_Survival >0.5, 1, 0)
titanic_test$IsAlive <- ifelse(titanic_test$Predicted_Survival >0.5, 1, 0)
roc(
titanic_training$IsAlive ~ titanic_training$Probability,
plot = TRUE,
print.auc = TRUE,
print.thres = "best"
)
library(pROC)
install.packages("pROC")
# install.packages("pROC")
roc(
titanic_training_modeldata$IsAlive ~ titanic_training_modeldata$Predicted_survival,
plot = TRUE,
print.auc = TRUE,
print.thres = "best"
)
# install.packages("pROC")
library(pROC)
roc(
titanic_training_modeldata$IsAlive ~ titanic_training_modeldata$Predicted_survival,
plot = TRUE,
print.auc = TRUE,
print.thres = "best"
)
roc(
titanic_training_modeldata$Survived ~ titanic_training_modeldata$Predicted_survival,
plot = TRUE,
print.auc = TRUE,
print.thres = "best"
)
titanic_test$IsAlive <- ifelse(titanic_test$Predicted_Survival >0.521, 1, 0)
View(titanic_test)
library(DescTools)
library("ResourceSelection")
library(car)
library("reghelper")
# install.packages("pROC")
library(pROC)
#-------------------------------------------------------------------
# Import data
# SY has run a cold calling campaign a month ago.
# From this campaign you are provided a rich dataset that contains
# information about a random set of existing SY clients (sample size: 4140).
#-------------------------------------------------------------------
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
unique(titanic_training$Embarked)
table(titanic_training$Embarked, useNA = "ifany")
titanic_training$Embarked[titanic_training$Embarked == ""] <- NA
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex', 'Embarked'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name',  'Ticket')]
str(titanic_training)
model1 <- glm(Survived ~ ., data = titanic_training, family = "binomial")
vif(model1)
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name', 'Embarked' 'Ticket')]
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_training)
model1 <- glm(Survived ~ ., data = titanic_training, family = "binomial")
vif(model1)
summary(model1)
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_training)
model1 <- glm(Survived ~ ., data = titanic_training, family = "binomial")
vif(model1)
# Pull data from the csv file
titanic_training <-read.csv("train.csv", header=TRUE)
#
names(titanic_training)
unique(titanic_training$Embarked)
table(titanic_training$Embarked, useNA = "ifany")
titanic_training$Embarked[titanic_training$Embarked == ""] <- NA
str(titanic_training)
colSums(is.na(titanic_training))
table(titanic_training$Embarked)
library('fastDummies')
#response should be between "0" and "1"
titanic_training <- dummy_cols(titanic_training, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_training[] <-lapply(titanic_training, as.numeric)
str(titanic_training)
# Drop columns not needed in analysis as cannot be numeric
titanic_training <- titanic_training[,!names(titanic_training) %in% c('PassengerId','Cabin','Name', 'Embarked', 'Ticket')]
str(titanic_training)
model1 <- glm(Survived ~ ., data = titanic_training, family = "binomial")
vif(model1)
summary(model1)
model2 <- glm(Survived ~ Age + SibSp + Pclass_2 + Pclass_3 + Sex_male, data = titanic_training, family = "binomial")
vif(model2)
summary(model2)
PseudoR2(model2, which = "Nagelkerke")
anova(model2, test="Chisq")
# Get model data
model_data <- model.frame(model2)
h3<-hoslem.test(model_data$Survived, fitted(model2), g = 10)
h3
#-----------------------------------------------------------------
# Standardization of Model Coefficients
# For comparison of affect of independent variables on dependent "Renew" to see which variable has the strongest effect.
#-----------------------------------------------------------------
model2.std <- beta(model2)
model2.std
# Write standardized coefficients to csv file for visualization
write.csv((coef(model2.std)[, "Estimate"]),"Standarised_Coefficients.csv")
#----------------------------------------------------------------
# Odds-Ratio Calculations
# To see how the log odds "Renew" affected by 1 unit increase in variables in model, minus the intercept
#----------------------------------------------------------------
exp(coef(model2))
exp(confint(model2))
write.csv((cbind(exp(coef(model2)), exp(confint(model2)))), "Odds_Ratio.csv")
titanic_training_modeldata <- model.frame(model2)
titanic_training_modeldata$Predicted_survival <- predict(model2, type = "response")
roc(
titanic_training_modeldata$Survived ~ titanic_training_modeldata$Predicted_survival,
plot = TRUE,
print.auc = TRUE,
print.thres = "best"
)
titanic_training_modeldata$IsAlive <- ifelse(titanic_training_modeldata$Predicted_survival > 0.521, 1, 0)
conf_matrix <- table(titanic_training_modeldata$IsAlive, titanic_training_modeldata$Survived)
conf_matrix
accuracytraining <- message("Accuracy Training Data: ", sum(diag(conf_matrix))/sum(conf_matrix))
message("Sensitivity Training: ", conf_matrix[2, 2]/sum(conf_matrix[ , 2]))
message("Specificity Training: ", conf_matrix[1, 1]/sum(conf_matrix[ , 1]))
Conf(model2, cutoff = 0.521)
titanic_test <- read.csv("test.csv", header = TRUE)
str(titanic_test)
names(titanic_test)
#response should be between "0" and "1"
titanic_test <- dummy_cols(titanic_test, select_columns = c('Pclass','Sex'), remove_first_dummy = TRUE, remove_selected_columns = TRUE)
#response should be between "0" and "1"
titanic_test[] <-lapply(titanic_test, as.numeric)
str(titanic_test)
titanic_test$Predicted_Survival <- predict(model2, newdata = titanic_test, type = "response")
titanic_test$IsAlive <- ifelse(titanic_test$Predicted_Survival > 0.521, 1, 0)
View(titanic_test)
titanic_test$Survived <- ifelse(titanic_test$Predicted_Survival > 0.521, 1, 0)
Submission <- titanic_test[, c('PassengerId', 'Survived')]
View(Submission)
write.csv("Submission.csv")
write.csv(Submission, "Submission.csv")
